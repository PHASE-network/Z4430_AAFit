/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "sqDalitzToMassesPdf.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

#include "RooRealVar.h" 
#include "myPDF.h" 

ClassImp(sqDalitzToMassesPdf) 

 sqDalitzToMassesPdf::sqDalitzToMassesPdf(const char *name, const char *title, 
					  RooAbsReal& _x,
					  RooAbsReal& _y,
					  const RooAbsPdf *_squareDalitz,
					  RooRealVar* _cosKstar,
					  const Double_t _MPsi_nS
					  ) :
  RooAbsPdf(name,title), 
  x("x","x",this,_x),
  y("y","y",this,_y),
  squareDalitz(_squareDalitz),
  cosKstar(_cosKstar),
  MPsi_nS(_MPsi_nS)
{ 
} 


 sqDalitzToMassesPdf::sqDalitzToMassesPdf(const sqDalitzToMassesPdf& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   y("y",this,other.y),
   squareDalitz(other.squareDalitz),
   cosKstar(other.cosKstar),
   MPsi_nS(other.MPsi_nS)
 { 
 } 



 Double_t sqDalitzToMassesPdf::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
printf("cosKstar=%p\nsquareDalitz=%p", cosKstar, squareDalitz);
   cosKstar->setVal( cosTheta_FromMasses_host(x, y, TMath::Power(MPsi_nS,2), MBd2, MKaon2, MPion2) );
   
   return squareDalitz->getVal() ; 
 } 



