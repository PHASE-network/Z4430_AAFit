/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "effMasses.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(effMasses) 

 effMasses::effMasses(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _y,
                        RooRealVar* _x2,
                        RooRealVar* _y2,
                        RooAbsPdf* _effDalitz) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   y("y","y",this,_y),
   //x2("x2","x2",this,_x2),
   //y2("y2","y2",this,_y2),
   x2(_x2),
   y2(_y2),
   effDalitz(_effDalitz)
 {
 } 


 effMasses::effMasses(const effMasses& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   y("y",this,other.y),
   //x2("x2",this,other.x2),
   //y2("y2",this,other.y2),
   x2(other.x2),
   y2(other.y2),
   effDalitz(other.effDalitz)
 {
 } 



 Double_t effMasses::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   x2->setVal( x*x ) ;
   y2->setVal( y*y );
   RooArgSet nSet(*x2,*y2);

   if (effDalitz) {
     //cout <<"effDalitz->getValV() = " <<effDalitz->getValV() <<endl;
     //cout <<"effDalitz->getVal() = " <<effDalitz->getVal() <<endl;
     return effDalitz->getVal() ;
     //return effDalitz->getValV() ;
     //return effDalitz->getValV( &nSet ) ; 
   } else {
     cout <<"\"effDalitz\" pdf pointer = 0! Aborting" <<endl;
     abort();
   } 
} 



